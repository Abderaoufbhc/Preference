# Vim

Tutorial about vim

###### Two extrea steps for Mac patched fonts

    $ git clone https://github.com/powerline/fonts
    $ ./fonts/install.sh
    $ rm -rf ./fonts

In Terminal/iTerm Preference, choose font "11pt Fira Mono Medium for Powerline"

## Detailed Tutorial:
1. Install instruction and some preferred plugins
  http://c7.se/switching-to-vundle/
2. Basic Tutorial Video
  from Shawn Biddle
  1: Tutorials
    https://www.youtube.com/watch?v=Nim4_f5QUxA&list=PLd-haPBm4f6X8cgU5fViIVL_jaZZl-m-E&index=3
    https://www.youtube.com/watch?v=2pqipq-UEwQ&index=5&list=PLd-haPBm4f6X8cgU5fViIVL_jaZZl-m-E
  2: Dotfiles
    http://shawnbiddle.com/dotfiles/
  3: .install
    https://github.com/shawncplus/dotfiles/blob/master/install
3. Blog post
  1: Best of Vim Tips
    http://rayninfo.co.uk/vimtips.html
  2: Why Vi/Vim
    http://www.viemu.com/a-why-vi-vim.html

## Vim Cheat Sheet

Starting Vim:
  vim <file>
  vim, :e <file>    // 'e' for edit

Scanning the canvas
      k
      ^
  h <   > l
      v
      j

Pen to the page:
  a - Insert after cursor
  A - Insert at the end of the line
  c - Change (Same as d but put me in insert mode)
      cw - change word
      cc = S - Delete current line and insert
      2cw - Delete 2 words and insert
      ci( - Delete inner block inside () and insert
  C - Delete from cursor to end of line and begin insert
  d - Delete/Cut: [range]d<motion>
      dd  - delete current line
      dj  - delete current and next line (j = down)
      2dj - delete current and 2 lines downward
      di( - Delete inner block inside ()
  D - Delete to the end of the line
  i - Insert at the cursor
  I - Insert at first non-blank character
  J - Join line below to the current one
  o - Insert in the next line
  O - Insert in the above line
  s - Delete character under cursor and enter insert mode
  S - Delete line and begin insert at beginning of same line
  x - Delete [count] characters under and after the cursor
  X - Delete [count] characters before the cursor

Handling the brush
  y - Yank. Example: yw (yank word)
  yy - yank the line you're on
  p - paste after cursor
  P - paste before cursor
  v - Visual selection
  u - undo stuff
  Ctrl-R - redo stuff

Moving the brush (Motion)
  word - separated by anything that's not a character (punctuation considered words)
  WORD - separated by spaces

  w - Forward to the beginning of next word
  W - Forward to the beginning of the next WORD
  b - Backward to the next beginning of a word
  B - Backward to the next beginning of a WORD
  e - Forward to the next end of word
  E - Forward to the next end of WORD
  0 - Move to the zeroth character of the line
  $ - Move to the last character of the line
  ^ - Move to the first non-blank character of the line
  gg - To the top of the file
  G - To the end of the file
  % - Moves from a parenthesis (or similar grouping character) to its matching one
  (
  )
  {
  }
  +/ - up/down
  '
  `

  fFtT All follow [(n)um] syntax
  [n]f<o> - Forward until (nth) (o)  (Inclusive)
  [n]F<o> - Backward until (nth) (o) (Inclusive)
  [n]t<o> - Forward until (nth) (o)  (Exclusive)
  [n]T<o> - Backward until (nth) (o) (Exclusive)

  Searching
    /  - Forward
    ?  - Backward
    *  - Word under cursor - forward  (bounded)
    g* - Word under cursor - forward  (unbounded)
    #  - Word under cursor - backward (bounded)
    g# - Word under cursor - backward (unbounded)
    n  - Next result, forward
    N  - Next result, backward

  Advanced:
    'f' followed by any other character to find its next occurrence
    '%' to use matching parens to go where you want to go
     'H', 'M' and 'L' take the cursor directly to the 'H'ighest, 'M'iddle, or 'L'ower line on the screen
     'zt', 'zz' and 'zb' keep the cursor at the current position, but scroll the view so that it falls at the 't'op, 'z' center, or 'b'ottom of the screen
    '/' which is effortless to type to search for a string,
    ']]' and the likes to navigate by functions
    '*' searches forward for the next occurrence of the word under the cursor ('#' does the same backwards, at symmetrical positions so its easier to remember).

Visual Mode
    v - start visual mode
    V - start linewise visual mode

Picking up the brush
  ESC
  Ctrl+[



Advanced
  ~  - Toggle the case of character under cursor
  g~ - Toggle case of [motion]
      g~w - Toggle case of cursor -> end of word
          tr|ue -> g~w -> trUE
      g~iw - Toggle case of entire word under cursor
          tr|ue -> g~iw -> TRUE

Managing multiple files at once
  :tabnew [file]       - Open a new tab with given file (or empty file)
  gt or :tabn[ext]     - Next tab
  gT or :tabp[revious] - Previous tab
  :tabm[ove] # - Move current tab to position # (zero-indexed), no argument = end
  :tabc        - Close current tab
  :tabo        - Close all other tabs except current

Macro
  1. qa - Record and save to a register
     @a - Repeat a register actions



Online reference
  http://www.radford.edu/~mhtay/CPSC120/VIM_Editor_Commands.htm


NERDTree
  Start
    vim :NERDTree
      :NERDTreeToggle
      :NERDTreeClose
    vim .
  Switch window
    <Ctrl>+w twice

Powerline - Airline
  Use airline due to Glyph problem about Powerline
  Use setting form http://jchain.github.io/blog/2013/07/17/fly-with-vim-airline/

A simple guide about Solarized theme and Tmux
  http://fideloper.com/mac-vim-tmux

To-read
  1. Color scheme Editor for Vim
    http://bytefluent.com/vivify/
